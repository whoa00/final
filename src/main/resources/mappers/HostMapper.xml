<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.ictedu.pitched.client.dao.HostDao">

	<!-- 캠핑장 등록 -->
	<insert id="campsite_add" parameterType="campsitedto">
		<selectKey keyProperty="campsite_id" resultType="int" order="BEFORE">
		SELECT CAMPSITE_SEQ.NEXTVAL FROM DUAL
		</selectKey> INSERT INTO
		Campsite ( campsite_id, user_id, camp_name, category, address,
		price_per_night, max_reservation, max_guests, description, status,
		reg_status ) VALUES ( #{campsite_id}, #{user_id}, #{camp_name},
		#{category}, #{address}, #{price_per_night}, #{max_reservation},
		#{max_guests}, #{description}, #{status}, #{reg_status} ) </insert>

	<!-- 캠핑장 사진 등록 -->
	<insert id="campsite_photos_add" parameterType="photodto">
		INSERT INTO Campsite_Photos (
		photo_id, campsite_id, url, description, is_primary
		) VALUES (
		PHOTO_SEQ.NEXTVAL, #{campsite_id}, #{url}, #{description}, #{is_primary}
		)
	</insert>

	<!-- 해시태그 존재 여부 확인 -->
	<select id="getHashtagByName" parameterType="string" resultType="int">
		SELECT hashtag_id
		FROM Hashtags
		WHERE tag_name = #{tag_name}
	</select>

	<!-- 해시태그 삽입 (ID 리턴) -->
	<insert id="insertHashtag" parameterType="hashtagdto">
		<selectKey keyProperty="hashtag_id" resultType="int" order="BEFORE">
		SELECT HASHTAG_SEQ.NEXTVAL FROM DUAL
		</selectKey> INSERT INTO
		Hashtags (hashtag_id, tag_name) VALUES (#{hashtag_id}, #{tag_name}) </insert>

	<!-- 캠핑장-해시태그 매핑 -->
	<insert id="insertCampsiteHashtag" parameterType="map">
		INSERT INTO Campsite_Hashtags (campsite_id, hashtag_id)
		VALUES (#{campsite_id}, #{hashtag_id})
	</insert>

    <select id="selectAllCampsites" parameterType="int" resultType="campsitedto">
        SELECT *
        FROM Campsite
        WHERE status = 'active'
        AND user_id = #{user_id}
        ORDER BY campsite_id
    </select>

    <select id="earn" parameterType="int" resultType="paydto">
        SELECT p.payment_id,
        p.reservation_id,
        p.amount,
        p.payment_date,
        p.payment_method,
        p.payment_status,
        p.transaction_id
        FROM payment p
        JOIN reservation r ON p.reservation_id = r.reservation_id
        WHERE r.user_id = #{userId}
    </select>

    <select id="review"
		resultType="reviewdto">
		SELECT * FROM reviews
		WHERE campsite_id = 4
	</select>
	<insert id="addHostReply" parameterType="map">
        INSERT INTO Review_Replies (
            reply_id,
            review_id,
            user_id,
            reply_comment
        )
        SELECT
            SEQ_REPLY.NEXTVAL,
            #{reviewId},
            #{hostId},
            #{replyComment}
        FROM DUAL
        WHERE EXISTS (
            -- 답글을 달 권한이 있는지 확인 (해당 캠핑장의 소유주가 맞는지)
            SELECT 1
            FROM Reviews r
            JOIN Campsite c ON r.campsite_id = c.campsite_id
            WHERE r.review_id = #{reviewId} AND c.user_id = #{hostId}
        )
        AND NOT EXISTS (
            -- 이미 답글이 달려있는지 확인 (중복 방지)
            SELECT 1
            FROM Review_Replies
            WHERE review_id = #{reviewId}
        )
    </insert>

</mapper>
